# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.example_boolean: '%env(bool:APP_EXAMPLE_BOOLEAN)%'
    app.example_zone: '%env(APP_EXAMPLE_ZONE)%'
    app.example_email: '%env(APP_EXAMPLE_EMAIL)%'
    cache_adapter: cache.adapter.filesystem
    secret_value: '%env(SECRET_VALUE)%'
    article_uploads: 'uploads/articles'
    article_uploads_dir: '%kernel.project_dir%/public/%article_uploads%'
    article_uploads_url: '%env(SITE_URL)%/%article_uploads%'
    router.request_context.scheme: '%env(SITE_BASE_SCHEME)%'
    router.request_context.host: '%env(SITE_BASE_HOST)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $debug: "%kernel.debug%"
            $apiLogger: '@monolog.logger.api'
            # $markdownLogger: "@monolog.logger.markdown"
            # App\Service\FileUploader $articleFileUploader: '@file_uploader.article'
            League\Flysystem\Filesystem $articleFilesystem: '@oneup_flysystem.uploads_articles_filesystem'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Service\MarkdownParser:
        arguments:
            $logger: "@monolog.logger.markdown"
    App\EventListener\ExampleEventListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onEvent }

    App\Homework\PetUnitProvider:
        class: App\Homework\PetUnitProvider
        tags:
            - { name: 'symfony_skillbox_homework.unit_provider' }
    App\Homework\Warcraft3HumanUnitProvider:
        class: App\Homework\Warcraft3HumanUnitProvider
        tags:
            - { name: 'symfony_skillbox_homework.unit_provider' }

    # SkillboxSymfony\ArticleContentProviderBundle\ArticleContentProvider:
    #     arguments:
    #         $boldWords: "%env(bool:MARK_ARTICLE_WORDS_WITH_BOLD)%"
    # SkillboxSymfony\ArticleContentProviderBundle\CommentContentProvider: null
    # SkillboxSymfony\ArticleContentProviderBundle\PasteWordsService: null

    # file_uploader.article:
    #     class: App\Service\FileUploader

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

#  article_provider:
#    class: App\Service\ArticleProvider
#    parsedown:
#        class: Demontpx\ParsedownBundle\Parsedown
